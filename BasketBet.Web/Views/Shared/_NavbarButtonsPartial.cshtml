@using BasketBet.EntityFramework.Entities
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> signInManager
@inject UserManager<AppUser> userManager

@{
    var currentUser = await userManager.GetUserAsync(User); // Pobieramy aktualnego użytkownika
}

<div class="nav-button">
    @if (signInManager.IsSignedIn(User))
    {
        var lastClaimTime = currentUser.LastPointsClaimTime; // Pobieramy czas ostatniego odebrania punktów
        var currentTime = DateTime.Now; // Aktualny czas serwera
        var hoursSinceLastClaim = (currentTime - lastClaimTime).TotalHours; // Różnica w godzinach

        if (hoursSinceLastClaim >= 3) // Sprawdzamy, czy minęły przynajmniej 3 godziny
        {
            <button class="btn signinButton m-0 p-0" onclick="claimPoints()">Collect Points</button>
        }
        <p class="btn m-0">Points: @(currentUser != null ? currentUser.Points.ToString() : "0")</p> <!-- Wyświetlamy rzeczywistą ilość punktów zalogowanego użytkownika -->
        <a asp-controller="Account" asp-action="LogOut" class="btn signinButton">Log Out</a>
    }

    else
    {
        <a asp-controller="Account" asp-action="Login" class="btn signinButton">Sign In</a>
        <a asp-controller="Account" asp-action="Register" class="btn">Sign Up</a>
    }
</div>
